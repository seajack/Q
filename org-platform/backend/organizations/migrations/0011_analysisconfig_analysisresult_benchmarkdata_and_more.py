# Generated by Django 5.2.1 on 2025-09-29 07:25

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('organizations', '0010_positiontemplate_tenant'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='配置名称')),
                ('analysis_weights', models.JSONField(default=dict, verbose_name='分析权重')),
                ('thresholds', models.JSONField(default=dict, verbose_name='阈值')),
                ('enabled_features', models.JSONField(default=list, verbose_name='启用功能')),
                ('update_frequency', models.IntegerField(default=24, verbose_name='更新频率(小时)')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '分析配置',
                'verbose_name_plural': '分析配置',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=100, verbose_name='分析类别')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='评分')),
                ('level', models.CharField(max_length=50, verbose_name='等级')),
                ('description', models.TextField(verbose_name='描述')),
                ('details', models.JSONField(default=dict, verbose_name='详细信息')),
                ('recommendations', models.JSONField(default=list, verbose_name='建议')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '分析结果',
                'verbose_name_plural': '分析结果',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BenchmarkData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('industry', models.CharField(max_length=100, verbose_name='行业')),
                ('company_size', models.CharField(max_length=50, verbose_name='公司规模')),
                ('metric_name', models.CharField(max_length=100, verbose_name='指标名称')),
                ('benchmark_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='基准值')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '基准数据',
                'verbose_name_plural': '基准数据',
                'ordering': ['industry', 'company_size', 'metric_name'],
            },
        ),
        migrations.CreateModel(
            name='OptimizationRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('priority', models.CharField(choices=[('high', '高'), ('medium', '中'), ('low', '低')], max_length=10, verbose_name='优先级')),
                ('category', models.CharField(max_length=100, verbose_name='类别')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('description', models.TextField(verbose_name='描述')),
                ('expected_benefit', models.TextField(verbose_name='预期收益')),
                ('implementation_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='实施成本')),
                ('timeframe', models.CharField(max_length=100, verbose_name='时间框架')),
                ('impacted_departments', models.JSONField(default=list, verbose_name='影响部门')),
                ('metrics', models.JSONField(default=dict, verbose_name='指标')),
                ('is_implemented', models.BooleanField(default=False, verbose_name='是否已实施')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '优化建议',
                'verbose_name_plural': '优化建议',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('overall_score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='总体评分')),
                ('health_level', models.CharField(max_length=50, verbose_name='健康等级')),
                ('metrics', models.JSONField(default=dict, verbose_name='指标')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('analysis_results', models.ManyToManyField(to='organizations.analysisresult', verbose_name='分析结果')),
                ('recommendations', models.ManyToManyField(to='organizations.optimizationrecommendation', verbose_name='建议')),
            ],
            options={
                'verbose_name': '组织分析',
                'verbose_name_plural': '组织分析',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='分析日期')),
                ('overall_score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='总体评分')),
                ('health_level', models.CharField(max_length=50, verbose_name='健康等级')),
                ('key_changes', models.JSONField(default=list, verbose_name='关键变化')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.organizationanalysis', verbose_name='关联分析')),
            ],
            options={
                'verbose_name': '分析历史',
                'verbose_name_plural': '分析历史',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='评分')),
                ('comments', models.TextField(blank=True, verbose_name='评论')),
                ('helpful_suggestions', models.JSONField(default=list, verbose_name='有用建议')),
                ('improvement_areas', models.JSONField(default=list, verbose_name='改进领域')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.organizationanalysis', verbose_name='分析')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户反馈',
                'verbose_name_plural': '用户反馈',
                'ordering': ['-created_at'],
            },
        ),
    ]
