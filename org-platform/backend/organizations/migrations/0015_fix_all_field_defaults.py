# Generated by Django 5.2.1 on 2025-10-05 09:29

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('organizations', '0014_fix_datapermission_user_field'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IntegrationMapping',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='映射名称')),
                ('source_field', models.CharField(max_length=100, verbose_name='源字段')),
                ('target_field', models.CharField(max_length=100, verbose_name='目标字段')),
                ('field_type', models.CharField(max_length=50, verbose_name='字段类型')),
                ('transformation_rule', models.TextField(blank=True, verbose_name='转换规则')),
                ('is_required', models.BooleanField(default=False, verbose_name='是否必需')),
                ('default_value', models.CharField(blank=True, max_length=200, verbose_name='默认值')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '集成映射',
                'verbose_name_plural': '集成映射',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='模板名称')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='模板编码')),
                ('title_template', models.CharField(max_length=200, verbose_name='标题模板')),
                ('message_template', models.TextField(verbose_name='消息模板')),
                ('notification_type', models.CharField(choices=[('info', '信息'), ('warning', '警告'), ('success', '成功'), ('error', '错误'), ('system', '系统'), ('workflow', '工作流'), ('integration', '集成'), ('permission', '权限')], max_length=20, verbose_name='通知类型')),
                ('priority', models.CharField(choices=[('low', '低'), ('medium', '中'), ('high', '高'), ('urgent', '紧急')], default='medium', max_length=10, verbose_name='优先级')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '通知模板',
                'verbose_name_plural': '通知模板',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='apigateway',
            options={'ordering': ['-created_at'], 'verbose_name': 'API网关', 'verbose_name_plural': 'API网关'},
        ),
        migrations.AlterModelOptions(
            name='apiroute',
            options={'ordering': ['-created_at'], 'verbose_name': 'API路由', 'verbose_name_plural': 'API路由'},
        ),
        migrations.AlterModelOptions(
            name='integrationconfig',
            options={'ordering': ['config_key'], 'verbose_name': '集成配置', 'verbose_name_plural': '集成配置'},
        ),
        migrations.AlterModelOptions(
            name='permission',
            options={'ordering': ['sort_order', 'name'], 'verbose_name': '权限', 'verbose_name_plural': '权限'},
        ),
        migrations.AlterModelOptions(
            name='workflowrule',
            options={'ordering': ['priority', 'created_at'], 'verbose_name': '工作流规则', 'verbose_name_plural': '工作流规则'},
        ),
        migrations.RenameField(
            model_name='rolepermission',
            old_name='is_granted',
            new_name='granted',
        ),
        migrations.RenameField(
            model_name='synclog',
            old_name='success_records',
            new_name='records_success',
        ),
        migrations.AlterUniqueTogether(
            name='apiroute',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='integrationconfig',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='apimonitor',
            name='error_rate',
        ),
        migrations.RemoveField(
            model_name='apimonitor',
            name='route',
        ),
        migrations.RemoveField(
            model_name='apimonitor',
            name='status_code_distribution',
        ),
        migrations.RemoveField(
            model_name='datapermission',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='datapermission',
            name='custom_scope',
        ),
        migrations.RemoveField(
            model_name='datapermission',
            name='data_masking',
        ),
        migrations.RemoveField(
            model_name='datapermission',
            name='description',
        ),
        migrations.RemoveField(
            model_name='datapermission',
            name='field_permissions',
        ),
        migrations.RemoveField(
            model_name='datapermission',
            name='name',
        ),
        migrations.RemoveField(
            model_name='datapermission',
            name='resource_id',
        ),
        migrations.RemoveField(
            model_name='datapermission',
            name='resource_type',
        ),
        migrations.RemoveField(
            model_name='datapermission',
            name='scope_type',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='alert_on_delay',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='alert_on_error',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='batch_size',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='cleaning_rules',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='data_cleaning_enabled',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='delay_threshold',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='description',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='max_retry_count',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='monitoring_enabled',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='source_table',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='status',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='sync_interval',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='target_table',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='validation_enabled',
        ),
        migrations.RemoveField(
            model_name='datasyncrule',
            name='validation_rules',
        ),
        migrations.RemoveField(
            model_name='departmentpermission',
            name='can_delete',
        ),
        migrations.RemoveField(
            model_name='departmentpermission',
            name='can_edit',
        ),
        migrations.RemoveField(
            model_name='departmentpermission',
            name='can_manage',
        ),
        migrations.RemoveField(
            model_name='departmentpermission',
            name='can_view',
        ),
        migrations.RemoveField(
            model_name='departmentpermission',
            name='data_scope',
        ),
        migrations.RemoveField(
            model_name='fieldpermission',
            name='masking_config',
        ),
        migrations.RemoveField(
            model_name='fieldpermission',
            name='masking_rule',
        ),
        migrations.RemoveField(
            model_name='permission',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='permission',
            name='level',
        ),
        migrations.RemoveField(
            model_name='permissionlog',
            name='action_detail',
        ),
        migrations.RemoveField(
            model_name='permissionlog',
            name='action_type',
        ),
        migrations.RemoveField(
            model_name='permissionlog',
            name='resource_id',
        ),
        migrations.RemoveField(
            model_name='permissionlog',
            name='resource_type',
        ),
        migrations.RemoveField(
            model_name='role',
            name='data_scope',
        ),
        migrations.RemoveField(
            model_name='role',
            name='inherit_permissions',
        ),
        migrations.RemoveField(
            model_name='role',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='role',
            name='level',
        ),
        migrations.RemoveField(
            model_name='role',
            name='parent_role',
        ),
        migrations.RemoveField(
            model_name='role',
            name='role_type',
        ),
        migrations.RemoveField(
            model_name='synclog',
            name='duration_seconds',
        ),
        migrations.RemoveField(
            model_name='synclog',
            name='error_details',
        ),
        migrations.RemoveField(
            model_name='synclog',
            name='error_records',
        ),
        migrations.RemoveField(
            model_name='synclog',
            name='records_per_second',
        ),
        migrations.RemoveField(
            model_name='synclog',
            name='skipped_records',
        ),
        migrations.RemoveField(
            model_name='synclog',
            name='total_records',
        ),
        migrations.RemoveField(
            model_name='userrole',
            name='expires_at',
        ),
        migrations.RemoveField(
            model_name='workflowrule',
            name='action_config',
        ),
        migrations.AddField(
            model_name='datapermission',
            name='conditions',
            field=models.JSONField(blank=True, default=dict, verbose_name='条件'),
        ),
        migrations.AddField(
            model_name='datapermission',
            name='resource',
            field=models.CharField(default='', max_length=200, verbose_name='资源'),
        ),
        migrations.AddField(
            model_name='datapermission',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='data_permissions', to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='datasyncrule',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='是否启用'),
        ),
        migrations.AddField(
            model_name='datasyncrule',
            name='sync_frequency',
            field=models.CharField(default='daily', max_length=50, verbose_name='同步频率'),
        ),
        migrations.AddField(
            model_name='departmentpermission',
            name='permission_type',
            field=models.CharField(choices=[('view', '查看'), ('edit', '编辑'), ('admin', '管理')], default='view', max_length=20, verbose_name='权限类型'),
        ),
        migrations.AddField(
            model_name='permission',
            name='is_system',
            field=models.BooleanField(default=False, verbose_name='系统权限'),
        ),
        migrations.AddField(
            model_name='permission',
            name='status',
            field=models.CharField(choices=[('active', '激活'), ('inactive', '未激活'), ('deprecated', '已废弃')], default='active', max_length=20, verbose_name='状态'),
        ),
        migrations.AddField(
            model_name='permissionlog',
            name='action',
            field=models.CharField(choices=[('grant', '授权'), ('revoke', '撤销'), ('assign', '分配'), ('remove', '移除'), ('login', '登录'), ('logout', '登出'), ('access', '访问'), ('deny', '拒绝')], default='access', max_length=20, verbose_name='操作'),
        ),
        migrations.AddField(
            model_name='permissionlog',
            name='description',
            field=models.TextField(blank=True, verbose_name='描述'),
        ),
        migrations.AddField(
            model_name='permissionlog',
            name='resource',
            field=models.CharField(blank=True, max_length=200, verbose_name='资源'),
        ),
        migrations.AddField(
            model_name='role',
            name='permissions',
            field=models.ManyToManyField(blank=True, through='organizations.RolePermission', to='organizations.permission', verbose_name='权限'),
        ),
        migrations.AddField(
            model_name='role',
            name='status',
            field=models.CharField(choices=[('active', '激活'), ('inactive', '未激活')], default='active', max_length=20, verbose_name='状态'),
        ),
        migrations.AddField(
            model_name='synclog',
            name='details',
            field=models.JSONField(default=dict, verbose_name='详细信息'),
        ),
        migrations.AddField(
            model_name='synclog',
            name='records_failed',
            field=models.IntegerField(default=0, verbose_name='失败记录数'),
        ),
        migrations.AddField(
            model_name='synclog',
            name='records_processed',
            field=models.IntegerField(default=0, verbose_name='处理记录数'),
        ),
        migrations.AddField(
            model_name='workflowrule',
            name='code',
            field=models.CharField(default='', max_length=50, unique=True, verbose_name='规则编码'),
        ),
        migrations.AddField(
            model_name='workflowrule',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='workflowrule',
            name='description',
            field=models.TextField(blank=True, verbose_name='规则描述'),
        ),
        migrations.AddField(
            model_name='workflowrule',
            name='execution_actions',
            field=models.JSONField(default=list, verbose_name='执行动作'),
        ),
        migrations.AddField(
            model_name='workflowrule',
            name='execution_count',
            field=models.PositiveIntegerField(default=0, verbose_name='执行次数'),
        ),
        migrations.AddField(
            model_name='workflowrule',
            name='failure_count',
            field=models.PositiveIntegerField(default=0, verbose_name='失败次数'),
        ),
        migrations.AddField(
            model_name='workflowrule',
            name='last_executed',
            field=models.DateTimeField(blank=True, null=True, verbose_name='最后执行时间'),
        ),
        migrations.AddField(
            model_name='workflowrule',
            name='status',
            field=models.CharField(choices=[('active', '激活'), ('inactive', '停用'), ('draft', '草稿'), ('testing', '测试中')], default='active', max_length=20, verbose_name='状态'),
        ),
        migrations.AddField(
            model_name='workflowrule',
            name='success_count',
            field=models.PositiveIntegerField(default=0, verbose_name='成功次数'),
        ),
        migrations.AlterField(
            model_name='apigateway',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='apimonitor',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='apiroute',
            name='cache_ttl',
            field=models.IntegerField(default=300, verbose_name='缓存TTL(秒)'),
        ),
        migrations.AlterField(
            model_name='apiroute',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='datapermission',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='datapermission',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='是否激活'),
        ),
        migrations.AlterField(
            model_name='datapermission',
            name='permission_type',
            field=models.CharField(choices=[('all', '全部数据'), ('department', '部门数据'), ('self', '个人数据'), ('custom', '自定义')], max_length=20, verbose_name='权限类型'),
        ),
        migrations.AlterField(
            model_name='datasyncrule',
            name='filter_conditions',
            field=models.JSONField(default=dict, verbose_name='过滤条件'),
        ),
        migrations.AlterField(
            model_name='datasyncrule',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='datasyncrule',
            name='source_system',
            field=models.CharField(max_length=100, verbose_name='源系统'),
        ),
        migrations.AlterField(
            model_name='datasyncrule',
            name='target_system',
            field=models.CharField(max_length=100, verbose_name='目标系统'),
        ),
        migrations.AlterField(
            model_name='departmentpermission',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.department', verbose_name='部门'),
        ),
        migrations.AlterField(
            model_name='departmentpermission',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='是否激活'),
        ),
        migrations.AlterField(
            model_name='dictionary',
            name='category',
            field=models.CharField(choices=[('employee_status', '员工状态'), ('position_type', '职位类型'), ('position_level', '职位级别'), ('department_type', '部门类型'), ('education_level', '学历层次'), ('skill_level', '技能等级'), ('language', '语言类型'), ('nationality', '国籍'), ('marital_status', '婚姻状况'), ('workflow_status', '工作流状态'), ('custom', '自定义')], max_length=50, verbose_name='字典分类'),
        ),
        migrations.AlterField(
            model_name='fieldpermission',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='是否激活'),
        ),
        migrations.AlterField(
            model_name='fieldpermission',
            name='permission_type',
            field=models.CharField(choices=[('read', '只读'), ('write', '可写'), ('hidden', '隐藏')], default='read', max_length=20, verbose_name='权限类型'),
        ),
        migrations.AlterField(
            model_name='integrationconfig',
            name='config_type',
            field=models.CharField(default='string', max_length=50, verbose_name='配置类型'),
        ),
        migrations.AlterField(
            model_name='integrationconfig',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='integrationsystem',
            name='auth_config',
            field=models.JSONField(default=dict, verbose_name='认证配置'),
        ),
        migrations.AlterField(
            model_name='integrationsystem',
            name='auth_type',
            field=models.CharField(default='token', max_length=50, verbose_name='认证类型'),
        ),
        migrations.AlterField(
            model_name='integrationsystem',
            name='base_url',
            field=models.URLField(max_length=500, verbose_name='API端点'),
        ),
        migrations.AlterField(
            model_name='integrationsystem',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AlterField(
            model_name='integrationsystem',
            name='health_check_url',
            field=models.URLField(blank=True, verbose_name='健康检查URL'),
        ),
        migrations.AlterField(
            model_name='integrationsystem',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='integrationsystem',
            name='status',
            field=models.CharField(choices=[('active', '激活'), ('inactive', '未激活'), ('maintenance', '维护中'), ('error', '错误')], default='inactive', max_length=20, verbose_name='状态'),
        ),
        migrations.AlterField(
            model_name='integrationsystem',
            name='system_type',
            field=models.CharField(choices=[('hr', '人力资源系统'), ('erp', 'ERP系统'), ('crm', 'CRM系统'), ('oa', 'OA系统'), ('finance', '财务系统'), ('performance', '绩效考核系统'), ('custom', '自定义系统'), ('other', '其他系统')], max_length=20, verbose_name='系统类型'),
        ),
        migrations.AlterField(
            model_name='permission',
            name='action',
            field=models.CharField(blank=True, max_length=50, verbose_name='操作'),
        ),
        migrations.AlterField(
            model_name='permission',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='permission',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='organizations.permission', verbose_name='父权限'),
        ),
        migrations.AlterField(
            model_name='permission',
            name='resource',
            field=models.CharField(blank=True, max_length=200, verbose_name='资源'),
        ),
        migrations.AlterField(
            model_name='permission',
            name='sort_order',
            field=models.PositiveIntegerField(default=0, verbose_name='排序'),
        ),
        migrations.AlterField(
            model_name='permissioncache',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='permissioncache',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_caches', to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AlterField(
            model_name='permissionlog',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='创建时间'),
        ),
        migrations.AlterField(
            model_name='permissionlog',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='permissionlog',
            name='result',
            field=models.CharField(choices=[('success', '成功'), ('failed', '失败'), ('denied', '拒绝')], default='success', max_length=20, verbose_name='结果'),
        ),
        migrations.AlterField(
            model_name='role',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AlterField(
            model_name='role',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='rolepermission',
            name='granted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='授权人'),
        ),
        migrations.AlterField(
            model_name='rolepermission',
            name='permission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.permission', verbose_name='权限'),
        ),
        migrations.AlterField(
            model_name='rolepermission',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.role', verbose_name='角色'),
        ),
        migrations.AlterField(
            model_name='synclog',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='synclog',
            name='status',
            field=models.CharField(choices=[('success', '成功'), ('failed', '失败'), ('partial', '部分成功'), ('running', '运行中')], max_length=20, verbose_name='状态'),
        ),
        migrations.AlterField(
            model_name='userrole',
            name='assigned_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to=settings.AUTH_USER_MODEL, verbose_name='分配人'),
        ),
        migrations.AlterField(
            model_name='userrole',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='是否激活'),
        ),
        migrations.AlterField(
            model_name='workflowrule',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='workflowrule',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='是否激活'),
        ),
        migrations.AlterField(
            model_name='workflowrule',
            name='priority',
            field=models.IntegerField(default=1, help_text='数字越小优先级越高', verbose_name='优先级'),
        ),
        migrations.AlterField(
            model_name='workflowrule',
            name='rule_type',
            field=models.CharField(choices=[('employee_management', '员工管理'), ('department_management', '部门管理'), ('position_management', '职位管理'), ('permission_management', '权限管理'), ('integration', '系统集成'), ('data_quality', '数据质量'), ('reporting', '报表生成'), ('notification', '通知提醒'), ('approval', '审批流程'), ('automation', '自动化')], max_length=50, verbose_name='规则类型'),
        ),
        migrations.CreateModel(
            name='IntegrationGateway',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='网关名称')),
                ('gateway_type', models.CharField(choices=[('api_gateway', 'API网关'), ('message_queue', '消息队列'), ('webhook', 'Webhook'), ('file_sync', '文件同步'), ('database_sync', '数据库同步')], max_length=20, verbose_name='网关类型')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('endpoint', models.URLField(max_length=500, verbose_name='端点')),
                ('configuration', models.JSONField(default=dict, verbose_name='配置')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '集成网关',
                'verbose_name_plural': '集成网关',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_type', models.CharField(max_length=50, verbose_name='测试类型')),
                ('test_config', models.JSONField(default=dict, verbose_name='测试配置')),
                ('status', models.CharField(choices=[('pending', '待测试'), ('running', '测试中'), ('success', '测试成功'), ('failed', '测试失败')], default='pending', max_length=20, verbose_name='状态')),
                ('test_result', models.JSONField(default=dict, verbose_name='测试结果')),
                ('error_message', models.TextField(blank=True, verbose_name='错误信息')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('integration_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='organizations.integrationsystem', verbose_name='集成系统')),
            ],
            options={
                'verbose_name': '集成测试',
                'verbose_name_plural': '集成测试',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SyncRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='规则名称')),
                ('sync_type', models.CharField(choices=[('real_time', '实时同步'), ('scheduled', '定时同步'), ('manual', '手动同步'), ('event_driven', '事件驱动')], max_length=20, verbose_name='同步类型')),
                ('sync_direction', models.CharField(choices=[('import', '导入'), ('export', '导出'), ('bidirectional', '双向')], max_length=20, verbose_name='同步方向')),
                ('sync_frequency', models.CharField(default='daily', max_length=50, verbose_name='同步频率')),
                ('field_mapping', models.JSONField(default=dict, verbose_name='字段映射')),
                ('filter_conditions', models.JSONField(default=dict, verbose_name='过滤条件')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('source_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_rules', to='organizations.integrationsystem', verbose_name='源系统')),
                ('target_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_rules', to='organizations.integrationsystem', verbose_name='目标系统')),
            ],
            options={
                'verbose_name': '同步规则',
                'verbose_name_plural': '同步规则',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterField(
            model_name='synclog',
            name='sync_rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='organizations.syncrule', verbose_name='同步规则'),
        ),
        migrations.CreateModel(
            name='WorkflowRuleExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', '待执行'), ('running', '执行中'), ('completed', '已完成'), ('failed', '执行失败'), ('cancelled', '已取消')], default='pending', max_length=20, verbose_name='执行状态')),
                ('context', models.JSONField(default=dict, verbose_name='执行上下文')),
                ('trigger_data', models.JSONField(default=dict, verbose_name='触发数据')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='开始时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='执行时长')),
                ('result', models.JSONField(default=dict, verbose_name='执行结果')),
                ('error_message', models.TextField(blank=True, verbose_name='错误信息')),
                ('executed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='执行者')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.workflowrule', verbose_name='工作流规则')),
            ],
            options={
                'verbose_name': '工作流执行记录',
                'verbose_name_plural': '工作流执行记录',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='模板名称')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='模板编码')),
                ('description', models.TextField(blank=True, verbose_name='模板描述')),
                ('category', models.CharField(choices=[('hr', '人力资源'), ('finance', '财务管理'), ('it', '信息技术'), ('operations', '运营管理'), ('compliance', '合规管理'), ('general', '通用流程')], max_length=20, verbose_name='模板分类')),
                ('workflow_definition', models.JSONField(default=dict, verbose_name='工作流定义')),
                ('form_schema', models.JSONField(default=dict, verbose_name='表单结构')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('is_public', models.BooleanField(default=False, verbose_name='是否公开')),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name='使用次数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '工作流模板',
                'verbose_name_plural': '工作流模板',
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='apiroute',
            name='gateway',
        ),
        migrations.RemoveField(
            model_name='apiroute',
            name='request_transform',
        ),
        migrations.RemoveField(
            model_name='apiroute',
            name='response_transform',
        ),
        migrations.RemoveField(
            model_name='apiroute',
            name='roles_required',
        ),
        migrations.RemoveField(
            model_name='integrationconfig',
            name='system',
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('message', models.TextField(verbose_name='消息内容')),
                ('notification_type', models.CharField(choices=[('info', '信息'), ('warning', '警告'), ('success', '成功'), ('error', '错误'), ('system', '系统'), ('workflow', '工作流'), ('integration', '集成'), ('permission', '权限')], max_length=20, verbose_name='通知类型')),
                ('priority', models.CharField(choices=[('low', '低'), ('medium', '中'), ('high', '高'), ('urgent', '紧急')], default='medium', max_length=10, verbose_name='优先级')),
                ('is_read', models.BooleanField(default=False, verbose_name='是否已读')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否已删除')),
                ('related_object_type', models.CharField(blank=True, max_length=50, verbose_name='关联对象类型')),
                ('related_object_id', models.CharField(blank=True, max_length=100, verbose_name='关联对象ID')),
                ('extra_data', models.JSONField(blank=True, default=dict, verbose_name='额外数据')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='阅读时间')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='过期时间')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='接收者')),
            ],
            options={
                'verbose_name': '消息通知',
                'verbose_name_plural': '消息通知',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'is_read', 'created_at'], name='organizatio_recipie_f22694_idx'), models.Index(fields=['notification_type', 'priority'], name='organizatio_notific_518921_idx')],
            },
        ),
    ]
